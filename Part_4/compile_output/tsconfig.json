{
  "compilerOptions": {
      "outDir": "./build/", // Путь, куда будет скомпилирован проект. Воссоздаёт всю структуру, включая вложенность папок

      "noEmit": true, // После компиляции не будет записи файлов. Используется для проверки на ошибки
      "noEmitOnError": true, // Не записывает файлы, если есть ошибки при проверке проекта (ts файлов)
      "noEmitHelpers": true, // Не добавляет в проект функции, для поддержки legacy

      "importHelpers": true, // Функции, требуемые для поддержки legacy будут сохраняться в отдельный файл, а не в сам код проекта
      "importsNotUsedAsValues": "remove", // Управление описаний типов (types). "remove" - удаляет из js эти данные

      "sourceMap": true, // Добавляет map файл (объяснение связи TS и JS), для debug-инга проекта в RUN-TIME. Например, при ошибки в RUN-TIME, будет показываться номер строки с ошибкой в файле TS
      "inlineSourceMap": true, // Не будет создавать отдельный map файл. Он запишет его сразу в файл JS, в виде комментария BASE64
      "inlineSources": true, // Записывает полностью все исходники TS в тот-же BASE64

      "sourceRoot": "./", // Указание пути, для файлов map. Применяется например в случаях, когда файлы map перемещены в другую отдельную папку
      "mapRoot": "",

      "declaration": true, // Создаёт файл с расширением "d.ts", где указана декларация проекта (классы, методы, но без фактической реализации). Применяется например в библиотеках, для описания взаимодействий
      "declarationMap": true, // Добавляет map для декларации. Для показа ошибок в RUN-TIME, ссылающихся на файлы TS
      "emitDeclarationOnly": true, // Создаёт файлы только с декларациями. Без JS, TS, ect. Для библиотек, написанных на JS без TS. Фактически описание JS, чтобы можно было использовать их в TS
      "declarationDir": "./@types", // Путь, куда будут сохранены декларации
      "stripInternal": true, // Позволяет указывать в файлах TS те функции (записью над ними /* @internal */), которые не будут описаны в декларации

      "preserveConstEnums": true, // Переопределяет поведение записи "const enum". При обычном поведении, TS хардкодит название.
  },
}